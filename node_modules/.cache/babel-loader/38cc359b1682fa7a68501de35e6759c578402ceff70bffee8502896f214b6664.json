{"ast":null,"code":"var _jsxFileName = \"/Users/fahima/workspace/react/my_page_learning 2/src/component/profilePage/InfiniteNameScroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../../assets/css/profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfiniteNameScroll(props) {\n  _s();\n  const [leftValue1, setLeftValue1] = useState(0);\n  const [leftValue2, setLeftValue2] = useState(-10000);\n  const [xaxis1, setXaxis1] = useState(0);\n  const [xaxis2, setXaxis2] = useState(0);\n  const screenWidth = useRef(0);\n  const scrollDirection = useRef('left');\n  const prevScrollPosition = useRef(0);\n  const scrollSpeed = 0.125;\n  useEffect(() => {\n    const setXaxis = () => {\n      if (scrollDirection.current == 'left') {\n        setXaxis1(prevCount => prevCount - scrollSpeed);\n        setXaxis2(prevCount => prevCount - scrollSpeed);\n        let thresholdDistance = screenWidth.current * 0.025;\n        let ElementToPlace = null;\n        if (nameElemet1.getBoundingClientRect().right < 0)\n          // means the ele1 is gone left into the screen\n          ElementToPlace = 1;else if (nameElemet2.getBoundingClientRect().right < 0) ElementToPlace = 2;\n        if (ElementToPlace != null)\n          // there is some element out of vw\n          {\n            if (ElementToPlace == 1) {\n              // to bring the left gone element to the right view\n              if (screenWidth.current - nameElemet2.getBoundingClientRect().right > thresholdDistance) {\n                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                setLeftValue1(screenWidth.current);\n                setXaxis1(0);\n              }\n            } else {\n              if (screenWidth.current - nameElemet1.getBoundingClientRect().right > thresholdDistance) {\n                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                setLeftValue2(screenWidth.current);\n                setXaxis2(0);\n              }\n            }\n          }\n      } else if (scrollDirection.current == 'right') {\n        setXaxis1(prevCount => prevCount + scrollSpeed);\n        setXaxis2(prevCount => prevCount + scrollSpeed);\n        let thresholdDistance = screenWidth.current * 0.025;\n        let ElementToPlace = null;\n        if (nameElemet1.getBoundingClientRect().left > screenWidth.current) ElementToPlace = 1;else if (nameElemet2.getBoundingClientRect().left > screenWidth.current) ElementToPlace = 2;\n        if (ElementToPlace != null) {\n          if (ElementToPlace == 1) {\n            if (nameElemet2.getBoundingClientRect().left > thresholdDistance) {\n              // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n              setLeftValue1(nameElemet1.getBoundingClientRect().width * -1);\n              setXaxis1(0);\n            }\n          } else {\n            if (nameElemet1.getBoundingClientRect().left > thresholdDistance) {\n              // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n              setLeftValue2(nameElemet2.getBoundingClientRect().width * -1);\n              setXaxis2(0);\n            }\n          }\n        }\n      }\n    };\n    const scrollHandler = () => {\n      if (prevScrollPosition.current > window.scrollY) {\n        // scroll down\n        scrollDirection.current = \"left\";\n      } else {\n        scrollDirection.current = \"right\";\n      }\n      prevScrollPosition.current = window.scrollY;\n    };\n    const intervalId = setInterval(setXaxis, 0.5);\n    const nameElemet1 = document.getElementsByClassName('name1')[0];\n    const nameElemet2 = document.getElementsByClassName('name2')[0];\n    screenWidth.current = window.innerWidth;\n    const scrollListner = window.addEventListener('scroll', scrollHandler);\n    setLeftValue2(nameElemet1.getBoundingClientRect().width + window.innerWidth * 0.025);\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"name-scroll-parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-scroll name1\",\n      style: {\n        color: \"red\",\n        left: `${leftValue1}px`,\n        transform: `translate(${xaxis1}px, 0px) translate3d(0px, 0px, 0px)`\n      },\n      children: \"- fahima farook1 - fahima farook2 - \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-scroll name2\",\n      style: {\n        left: `${leftValue2}px`,\n        transform: `translate(${xaxis2}px, 0px) translate3d(0px, 0px, 0px)`\n      },\n      children: \" - one two three four -  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n_s(InfiniteNameScroll, \"wGkDKepvA22yC2M84ZTQ1fVLZuI=\");\n_c = InfiniteNameScroll;\nexport default InfiniteNameScroll;\nvar _c;\n$RefreshReg$(_c, \"InfiniteNameScroll\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","InfiniteNameScroll","props","_s","leftValue1","setLeftValue1","leftValue2","setLeftValue2","xaxis1","setXaxis1","xaxis2","setXaxis2","screenWidth","scrollDirection","prevScrollPosition","scrollSpeed","setXaxis","current","prevCount","thresholdDistance","ElementToPlace","nameElemet1","getBoundingClientRect","right","nameElemet2","left","width","scrollHandler","window","scrollY","intervalId","setInterval","document","getElementsByClassName","innerWidth","scrollListner","addEventListener","removeEventListener","clearInterval","className","children","style","color","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fahima/workspace/react/my_page_learning 2/src/component/profilePage/InfiniteNameScroll.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport '../../assets/css/profilePage.css';\n\nfunction InfiniteNameScroll(props) {\n    const[leftValue1, setLeftValue1] = useState(0);\n    const[leftValue2, setLeftValue2] = useState(-10000);\n    const[xaxis1, setXaxis1] = useState(0);\n    const[xaxis2, setXaxis2] = useState(0);\n    const screenWidth = useRef(0);\n    const scrollDirection = useRef('left');\n    const prevScrollPosition = useRef(0);\n    const scrollSpeed = 0.125;\n\n    useEffect(()=>{\n        const setXaxis =()=>{\n            if(scrollDirection.current == 'left'){\n                setXaxis1((prevCount)=>prevCount - scrollSpeed)\n                setXaxis2((prevCount)=>prevCount - scrollSpeed)\n                let thresholdDistance = screenWidth.current*0.025\n                \n                let ElementToPlace = null;\n                if(nameElemet1.getBoundingClientRect().right < 0) // means the ele1 is gone left into the screen\n                    ElementToPlace = 1;\n                else if(nameElemet2.getBoundingClientRect().right < 0)\n                    ElementToPlace = 2;\n\n                if(ElementToPlace != null) // there is some element out of vw\n                {\n                    if(ElementToPlace ==1){ // to bring the left gone element to the right view\n                        if((screenWidth.current - nameElemet2.getBoundingClientRect().right) > thresholdDistance){\n                                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                                setLeftValue1(screenWidth.current);\n                                setXaxis1(0);\n                            }\n                    }\n                    else{\n                        if((screenWidth.current - nameElemet1.getBoundingClientRect().right) > thresholdDistance){\n                                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                                setLeftValue2(screenWidth.current);\n                                setXaxis2(0);\n                            }\n                    }\n                }  \n            } \n            else if(scrollDirection.current == 'right'){\n                setXaxis1((prevCount)=>prevCount + scrollSpeed)\n                setXaxis2((prevCount)=>prevCount + scrollSpeed)\n                let thresholdDistance = screenWidth.current*0.025\n                \n                let ElementToPlace = null;\n                if(nameElemet1.getBoundingClientRect().left > screenWidth.current)\n                    ElementToPlace = 1;\n                else if(nameElemet2.getBoundingClientRect().left > screenWidth.current )\n                    ElementToPlace = 2;\n\n                if(ElementToPlace != null)\n                {\n                    if(ElementToPlace ==1){\n                        if((nameElemet2.getBoundingClientRect().left) > thresholdDistance){\n                                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                                setLeftValue1(nameElemet1.getBoundingClientRect().width*-1);\n                                setXaxis1(0);\n                            }\n                    }\n                    else{\n                        if((nameElemet1.getBoundingClientRect().left) > thresholdDistance){\n                                // console.log('away from edge',ElementToPlace.getBoundingClientRect().left);\n                                setLeftValue2(nameElemet2.getBoundingClientRect().width*-1);\n                                setXaxis2(0);\n                            }\n                    }\n                }  \n            }\n            \n        }\n\n        const scrollHandler =()=>{\n            if(prevScrollPosition.current > window.scrollY){ // scroll down\n                scrollDirection.current = \"left\"\n            }\n            else {\n                scrollDirection.current = \"right\"\n            }\n            prevScrollPosition.current = window.scrollY;\n        }\n\n        const intervalId = setInterval(setXaxis, 0.5);\n        const nameElemet1 = document.getElementsByClassName('name1')[0];\n        const nameElemet2 = document.getElementsByClassName('name2')[0];\n        screenWidth.current = window.innerWidth;\n        const scrollListner =  window.addEventListener('scroll', scrollHandler)\n        setLeftValue2(nameElemet1.getBoundingClientRect().width + window.innerWidth*0.025)\n\n        return () => {\n            window.removeEventListener('scroll', scrollHandler);\n            clearInterval(intervalId);\n          };\n          \n    },[])\n\n\n    return (\n        <div className = \"name-scroll-parent\">\n            <div className=\"name-scroll name1\" style={{color:\"red\", left: `${leftValue1}px`, transform: `translate(${xaxis1}px, 0px) translate3d(0px, 0px, 0px)` }}>- fahima farook1 - fahima farook2 - </div>\n            <div className=\"name-scroll name2\" style={{ left: `${leftValue2}px`, transform: `translate(${xaxis2}px, 0px) translate3d(0px, 0px, 0px)` }}> - one two three four -  </div>\n        </div>\n    );\n}\n\nexport default InfiniteNameScroll;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}