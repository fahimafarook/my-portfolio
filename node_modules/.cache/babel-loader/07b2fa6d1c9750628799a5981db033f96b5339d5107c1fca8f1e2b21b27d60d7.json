{"ast":null,"code":"var _jsxFileName = \"/Users/fahima/workspace/react/my_page_learning/src/component/profilePage/AboutMe.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport TrueTextColorChange from '../helper/TrueTextColorChange';\nimport '../../assets/css/profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AboutMe(props) {\n  _s();\n  const buttonNameRef = useRef(null);\n  const isVisible = useRef(0);\n  const [growingDiv, setGrowingDiv] = useState(500);\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        isVisible.current = true;\n      } else {\n        isVisible.current = false;\n      }\n    });\n  });\n  useEffect(() => {\n    const scrollHandler = () => {\n      if (isVisible.current) {\n        console.log(\"growwww\", growingDiv);\n        setGrowingDiv(prev => prev + 1);\n      }\n    };\n    window.addEventListener('scroll', scrollHandler);\n    if (buttonNameRef.current) {\n      observer.observe(buttonNameRef.current);\n    }\n    return () => {\n      window.removeEventListener('scroll', scrollHandler);\n      if (buttonNameRef.current) {\n        observer.unobserve(buttonNameRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `parent-tag ${isVisible.current ? 'change-the-background' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `quote-1 ${isVisible.current ? 'change-the-background-quote' : ''}`,\n      children: \" Every solution leads to a betterment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"growing-section\",\n      style: {\n        height: `${growingDiv}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `fixed-section ${isVisible.current ? 'fixed1' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(TrueTextColorChange, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      ref: buttonNameRef,\n      style: {\n        width: 0,\n        height: 0,\n        border: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this), console.log(growingDiv)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(AboutMe, \"flzVty2vnSgr1pkkFU1+oLJLyCA=\");\n_c = AboutMe;\nexport default AboutMe;\nvar _c;\n$RefreshReg$(_c, \"AboutMe\");","map":{"version":3,"names":["React","useRef","useEffect","useState","TrueTextColorChange","jsxDEV","_jsxDEV","AboutMe","props","_s","buttonNameRef","isVisible","growingDiv","setGrowingDiv","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","current","scrollHandler","console","log","prev","window","addEventListener","observe","removeEventListener","unobserve","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","ref","width","border","_c","$RefreshReg$"],"sources":["/Users/fahima/workspace/react/my_page_learning/src/component/profilePage/AboutMe.js"],"sourcesContent":["import React, {useRef, useEffect, useState } from 'react';\nimport TrueTextColorChange from '../helper/TrueTextColorChange';\nimport '../../assets/css/profilePage.css'\n\nfunction AboutMe(props) {\n\n    const buttonNameRef = useRef(null);\n    const isVisible = useRef(0);\n    const [growingDiv, setGrowingDiv] = useState(500);\n\n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            isVisible.current = true;\n          } else {\n            isVisible.current = false;\n          }\n        });\n      });\n\n\n    useEffect(()=>{\n\n      const scrollHandler = ()=>{\n        if(isVisible.current){\n          console.log(\"growwww\", growingDiv)\n          setGrowingDiv((prev) => prev+1)\n        }\n      }\n\n      window.addEventListener('scroll', scrollHandler);\n\n      if (buttonNameRef.current) {\n          observer.observe(buttonNameRef.current);\n      }\n      \n        return () => {\n          window.removeEventListener('scroll', scrollHandler);\n        if (buttonNameRef.current) {\n            observer.unobserve(buttonNameRef.current);\n  \n        }\n        };\n\n    },[])\n    return (\n        <div className={`parent-tag ${isVisible.current ? 'change-the-background' : ''}`}>\n            <div className={`quote-1 ${isVisible.current ? 'change-the-background-quote' : ''}`}> Every solution leads to a betterment</div>\n            <div className= 'space-small'></div>\n            <div className= 'growing-section' style ={{height : `${growingDiv}px`}}>\n              <div className={`fixed-section ${isVisible.current ? 'fixed1' : ''}`}>\n                <TrueTextColorChange/>\n              </div>\n            </div>\n           <hr ref={buttonNameRef} style={{ width: 0, height: 0, border: 0}}></hr>\n           {console.log(growingDiv)}\n        </div>\n    );\n}\n\nexport default AboutMe;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}