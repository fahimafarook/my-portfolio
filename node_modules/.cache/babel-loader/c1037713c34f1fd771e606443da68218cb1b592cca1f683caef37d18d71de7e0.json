{"ast":null,"code":"var _jsxFileName = \"/Users/fahima/workspace/react/my_page_learning/src/component/profilePage/InfiniteNameScroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../../assets/css/profilePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfiniteNameScroll(props) {\n  _s();\n  const scrollString = props.scrollString;\n  const [xaxis1, setXaxis1] = useState(0);\n  const [xaxis2, setXaxis2] = useState(0);\n  const slidingName1 = useRef(null);\n  const slidingName2 = useRef(null);\n  const slidingNamePositions = useRef([slidingName1, slidingName2]);\n  const nextStringAppended = useRef(false);\n  useEffect(() => {\n    const setXaxis = () => {\n      setXaxis1(prevCount => prevCount - 1);\n      setXaxis2(prevCount => prevCount - 1);\n      let screenWidth = window.innerWidth;\n      if (screenWidth - slidingNamePositions.current[0].getBoundingClientRect().right > screenWidth * 0.11) {\n        if (nextStringAppended) {\n          // console.log(\"want this\", slidingNamePositions.current[1].getBoundingClientRect().left)\n          if (slidingNamePositions.current[1].className === \"name1\") {\n            setXaxis1(0);\n          } else {\n            setXaxis2(0);\n          }\n          slidingNamePositions.current[1].style.left = slidingNamePositions.current[0].getBoundingClientRect().left + slidingNamePositions.current[1].getBoundingClientRect().width;\n          [slidingNamePositions.current[0], slidingNamePositions.current[1]] = [slidingNamePositions.current[1], slidingNamePositions.current[0]];\n        }\n        // console.log(\"slidingNamePositions\" , slidingNamePositions);\n        nextStringAppended.current = false;\n        // console.log(\"0.2 gap --------\")\n      } else if (nextStringAppended.current != true && screenWidth - slidingNamePositions.current[0].getBoundingClientRect().right > screenWidth * 0.1) {\n        // console.log(\"0.1 gap ---\")\n        nextStringAppended.current = true;\n        // console.log(slidingName1.current.getBoundingClientRect().right);\n      }\n    };\n\n    slidingName1.current = slidingNamePositions.current[0] = document.getElementsByClassName('name1')[0];\n    slidingName2.current = slidingNamePositions.current[1] = document.getElementsByClassName('name2')[0];\n    const intervalId = setInterval(setXaxis, 0.5);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"name-scroll-parent\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-scroll name1\",\n      style: {\n        left: \"0px\",\n        transform: `translate(${xaxis1}px, 0px) translate3d(0px, 0px, 0px)`\n      },\n      children: \"fahima farook arun kumar-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name-scroll name2\",\n      style: {\n        left: \"0px\",\n        transform: `translate(${xaxis2}px, 0px) translate3d(0px, 0px, 0px)`\n      },\n      children: \"fahima farook arun kumar-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(InfiniteNameScroll, \"rs4fuW3VClnrbhI9og9+w5abT6Q=\");\n_c = InfiniteNameScroll;\nexport default InfiniteNameScroll;\n\n//(2500 -2200) < 250px => true\n// e2.trans(100)\nvar _c;\n$RefreshReg$(_c, \"InfiniteNameScroll\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","InfiniteNameScroll","props","_s","scrollString","xaxis1","setXaxis1","xaxis2","setXaxis2","slidingName1","slidingName2","slidingNamePositions","nextStringAppended","setXaxis","prevCount","screenWidth","window","innerWidth","current","getBoundingClientRect","right","className","style","left","width","document","getElementsByClassName","intervalId","setInterval","children","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fahima/workspace/react/my_page_learning/src/component/profilePage/InfiniteNameScroll.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport '../../assets/css/profilePage.css';\n\nfunction InfiniteNameScroll(props) {\n\n    const scrollString = props.scrollString;\n    const[xaxis1, setXaxis1] = useState(0);\n    const[xaxis2, setXaxis2] = useState(0);\n    const slidingName1 =  useRef(null);\n    const slidingName2 = useRef(null);\n    const slidingNamePositions = useRef([slidingName1, slidingName2]);\n    const nextStringAppended = useRef(false);\n\n\n    useEffect(()=>{\n        const setXaxis = ()=>{\n            setXaxis1((prevCount)=>prevCount - 1)\n            setXaxis2((prevCount)=>prevCount - 1)\n            let screenWidth = window.innerWidth;\n            if(screenWidth - slidingNamePositions.current[0].getBoundingClientRect().right > screenWidth*0.11){\n                if(nextStringAppended){\n                    // console.log(\"want this\", slidingNamePositions.current[1].getBoundingClientRect().left)\n                    if(slidingNamePositions.current[1].className === \"name1\")\n                    {\n                        setXaxis1(0);\n    \n                    }\n                    else {\n                        setXaxis2(0); \n                    }\n                    slidingNamePositions.current[1].style.left = slidingNamePositions.current[0].getBoundingClientRect().left + slidingNamePositions.current[1].getBoundingClientRect().width;\n                    [slidingNamePositions.current[0], slidingNamePositions.current[1]] = [slidingNamePositions.current[1], slidingNamePositions.current[0]]\n                }\n                // console.log(\"slidingNamePositions\" , slidingNamePositions);\n                nextStringAppended.current = false;\n                // console.log(\"0.2 gap --------\")\n            }\n            else if (nextStringAppended.current != true && (screenWidth - slidingNamePositions.current[0].getBoundingClientRect().right > screenWidth*0.1 ))\n            {\n                // console.log(\"0.1 gap ---\")\n                nextStringAppended.current = true;\n                // console.log(slidingName1.current.getBoundingClientRect().right);\n            }\n        }\n\n        slidingName1.current = slidingNamePositions.current[0] =  document.getElementsByClassName('name1')[0];\n        slidingName2.current = slidingNamePositions.current[1] = document.getElementsByClassName('name2')[0];\n        const intervalId = setInterval(setXaxis, 0.5);\n    },[])\n\n\n    return (\n        <div className = \"name-scroll-parent\">\n            <div className = \"name-scroll name1\" style={{left: \"0px\", transform: `translate(${xaxis1}px, 0px) translate3d(0px, 0px, 0px)`}}>fahima farook arun kumar-</div>\n            <div className = \"name-scroll name2\" style={{left: \"0px\", transform: `translate(${xaxis2}px, 0px) translate3d(0px, 0px, 0px)`}}>fahima farook arun kumar-</div>\n        </div>\n    );\n}\n\nexport default InfiniteNameScroll;\n\n\n//(2500 -2200) < 250px => true\n// e2.trans(100)\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}